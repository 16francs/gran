// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/validation/task.go

// Package mock_validation is a generated GoMock package.
package mock_validation

import (
	context "context"
	domain "github.com/calmato/gran/api/todo/internal/domain"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTaskDomainValidation is a mock of TaskDomainValidation interface
type MockTaskDomainValidation struct {
	ctrl     *gomock.Controller
	recorder *MockTaskDomainValidationMockRecorder
}

// MockTaskDomainValidationMockRecorder is the mock recorder for MockTaskDomainValidation
type MockTaskDomainValidationMockRecorder struct {
	mock *MockTaskDomainValidation
}

// NewMockTaskDomainValidation creates a new mock instance
func NewMockTaskDomainValidation(ctrl *gomock.Controller) *MockTaskDomainValidation {
	mock := &MockTaskDomainValidation{ctrl: ctrl}
	mock.recorder = &MockTaskDomainValidationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTaskDomainValidation) EXPECT() *MockTaskDomainValidationMockRecorder {
	return m.recorder
}

// Task mocks base method
func (m *MockTaskDomainValidation) Task(ctx context.Context, t *domain.Task) []*domain.ValidationError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Task", ctx, t)
	ret0, _ := ret[0].([]*domain.ValidationError)
	return ret0
}

// Task indicates an expected call of Task
func (mr *MockTaskDomainValidationMockRecorder) Task(ctx, t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Task", reflect.TypeOf((*MockTaskDomainValidation)(nil).Task), ctx, t)
}
