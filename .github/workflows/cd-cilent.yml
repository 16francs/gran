name: Client(Nuxt.js) Deploy to Firebase Hosting
on:
  push:
    paths:
      - 'client/**'
    branches:
      - master

jobs:
  deploy:
    name: Deploy Firebase Hosting
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Setup Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        working-directory: ./client
        run: yarn

      - name: Build
        working-directory: ./client
        run: yarn build
        env:
          API_URL: ${{ secrets.API_URL }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Install firebase-tools
        working-directory: ./client
        run: npm install -g firebase-tools

      - name: Deploy to Firebase Hosting
        working-directory: ./client
        run: firebase deploy --token $FIREBASE_TOKEN
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
